apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datahub-gms.fullname" . }}
  labels:
    {{- include "datahub-gms.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "datahub-gms.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "datahub-gms.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "datahub-gms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.global.credentialsAndCertsSecrets }}
        - name: datahub-certs-dir
          secret:
            defaultMode: 256
            secretName: {{ .Values.global.credentialsAndCertsSecrets.name }}
        {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: EBEAN_DATASOURCE_USERNAME
              value: "{{ .Values.global.sql.datasource.username }}"
            - name: EBEAN_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.sql.datasource.password.secretRef }}"
                  key: "{{ .Values.global.sql.datasource.password.secretKey }}"
            - name: EBEAN_DATASOURCE_HOST
              value: "{{ .Values.global.sql.datasource.host }}"
            - name: EBEAN_DATASOURCE_URL
              value: "{{ .Values.global.sql.datasource.url }}"
            - name: EBEAN_DATASOURCE_DRIVER
              value: "{{ .Values.global.sql.datasource.driver }}"
            - name: KAFKA_BOOTSTRAP_SERVER
              value: "{{ .Values.global.kafka.bootstrap.server }}"
            - name: KAFKA_SCHEMAREGISTRY_URL
              value: "{{ .Values.global.kafka.schemaregistry.url }}"
            - name: ELASTICSEARCH_HOST
              value: "{{ .Values.global.elasticsearch.host }}"
            - name: ELASTICSEARCH_PORT
              value: "{{ .Values.global.elasticsearch.port }}"
            - name: NEO4J_HOST
              value: "{{ .Values.global.neo4j.host }}"
            - name: NEO4J_URI
              value: "{{ .Values.global.neo4j.uri }}"
            - name: NEO4J_USERNAME
              value: "{{ .Values.global.neo4j.username }}"
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.neo4j.password.secretRef }}"
                  key: "{{ .Values.global.neo4j.password.secretKey }}"
            {{- if .Values.global.springKafkaConfigurationOverrides }}
            {{- range $configName, $configValue := .Values.global.springKafkaConfigurationOverrides }}
            - name: SPRING_KAFKA_PROPERTIES_{{ $configName | replace "." "_" | upper }}
              value: {{ $configValue }}
            {{- end }}
            {{- end }}
            {{- if .Values.global.credentialsAndCertsSecrets }}
            {{- range $envVarName, $envVarValue := .Values.global.credentialsAndCertsSecrets.secureEnv }}
            - name: SPRING_KAFKA_PROPERTIES_{{ $envVarName | replace "." "_" | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.credentialsAndCertsSecrets.name }}
                  key: {{ $envVarValue }}
            {{- end }}
            {{- end }}
          {{- if .Values.extraEnvs }}
            {{ toYaml .Values.extraEnvs | indent 10 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.global.credentialsAndCertsSecrets }}
            - name: datahub-certs-dir
              mountPath: {{ .Values.global.credentialsAndCertsSecretPath | default "/mnt/certs" }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | indent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
